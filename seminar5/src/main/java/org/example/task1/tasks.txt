Задание №1
Создайте два модуля. Первый модуль генерирует список случайных чисел. Второй модуль находит
максимальное число в этом списке.
Вам нужно сначала написать юнит-тесты для каждого модуля, затем написать интеграционный
тест, который проверяет, что оба модуля работают вместе правильно

Задание №2
У вас есть два класса - UserService и UserRepository. UserService использует UserRepository для
получения информации о пользователе. Ваша задача - написать интеграционный тест, который
проверяет, что UserService и UserRepository работают вместе должным образом.

Задание №3
У вас есть сервис по обработке заказов, состоящий из двух классов: OrderService и
PaymentService. Класс OrderService обрабатывает заказы и делает вызовы к
PaymentService для обработки платежей. Ваша задача - написать интеграционный тест,
который проверяет, что OrderService и PaymentService взаимодействуют корректно

Задание №4
Напишите автоматизированный тест, который выполнит следующие шаги:
1. Открывает главную страницу Google.
2. Вводит "Selenium" в поисковую строку и нажимает кнопку "Поиск в Google".
3. В результатах поиска ищет ссылку на официальный сайт Selenium
(https://www.selenium.dev) и проверяет, что ссылка действительно присутствует среди
результатов поиска.

Задание №5
Нужно написать сквозной тест с использованием Selenium, который авторизует пользователя на
сайте https://www.saucedemo.com/.
Данные для входа - логин: "standard_user", пароль: "secret_sauce".
Проверить, что авторизация прошла успешно и отображаются товары.
Вам необходимо использовать WebDriver для открытия страницы и методы sendKeys() для ввода
данных в поля формы, и submit() для отправки формы. После этого, проверьте, что на странице
отображаются продукты (productsLabel.getText() = "Products").
